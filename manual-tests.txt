Use `./build.sh` to build CiCo and `./run.sh` to run it if using the command line. You can otherwise use your IDE to build and run CiCo.

# Module 2: Sample test for the happy path. 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. Wait 11 seconds.

## Expected results:
* The status panel should appear after step 2.
* The main panel should appear after step 3.

# Module 2: Sample test for invalid card numbers.

## Test steps
1. Build and run CiCo.
2. Enter 99999999 into the field and click Update.
3. Wait 11 seconds.

## Expected results:
* The error panel should appear after step 2.
* The main panel should appear after step 3.

# Module 2: Help users recognize, diagnose, and recover from errors

## Test steps
1. Build and run CiCo.
2. Enter 99999999 into the field and click Update.

## Expected results
* The panel should display "Please show your card to staff to validate." after step 2.

# Module 2: Help and documentation

## Test steps
1. Build and run CiCo.

## Expected results
* The version number should be displayed after "CiCo" at the bottom.


# Module 3: Visibility of system status 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. Wait for status panel to close.
4. Enter 00000000 into the field and click Update.

## Expected results
* Should display "Checked IN" after step 2.
* Should display "Checked OUT" after step 4.

# Module 3: Match between system and the real world

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.

## Expected results
* Should display "Developer" for the user name.


# Module 4 : Filtering Numbers vs Letters in Card Field
## Test steps
1. Build and run Cico.
2. Enter abcdefg and click Update.

## Expected results
* Should display nothing and ignore the letters.

## Module 4: Test for Limited Number of Digits
##Test steps
1. Build and run Cico.
2. Enter 12345678910 and click Update.

## Expected Results
* Should display that there are too many digits.

## Module 5: Test for closing the application after JFrame is closed
## Test Steps
1. Build and run Cico.
2. Click exit button to close the JFrame.

##Expected Results:
* Should close the application and display "Clean shutdown".

## Module 6: Providing a better asthetic
## Test Steps
1. Build and run Cico.
2. View the main page
3. Enter 00000000 and click update.
4. View the login page.
5. Close out of the program.

##Expected Results:
* Should appear more in neutral colors

## Module 6: Providing a better asthetic
## Test Steps
1. Build and run Cico.
2. View the main page
3. Enter 99999999 and click update.
4. View the error page.
5. Close out of the program.

##Expected Results:
* The error page should still be red, but not as bright.  The text should be more readable

